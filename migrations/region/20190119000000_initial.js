const db = require('../helpers/DatabaseHelper')

exports.up = async function(knex) {
  await db.createTable(knex, 'Cause', table => {
    table.string('CauseId', 50)
    table.string('LangIsoCode', 3)
    table.string('RegionId', 50)
    table.string('CauseName', 50)
    table.text('CauseDesc')
    table.integer('CauseActive')
    table.integer('CausePredefined')
    table.string('CauseRGBColor', 10)
    table.text('CauseKeyWords')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'DatabaseLog', table => {
    table.datetime('DBLogDate')
    table.string('DBLogType', 20)
    table.text('DBLogNotes')
    table.string('DBLogUserId', 20)
  })

  await db.createTable(knex, 'Disaster', table => {
    table.string('DisasterId', 50)
    table.string('RegionId', 50)
    table.string('DisasterSerial', 50)
    table.string('DisasterBeginTime', 30)
    table.string('GeographyId', 100)
    table.text('DisasterSiteNotes')
    table.double('DisasterLatitude')
    table.double('DisasterLongitude')
    table.string('DisasterSource', 200)
    table.string('RecordStatus', 20)
    table.string('RecordAuthor', 100)
    table.string('EventId', 50)
    table.text('EventNotes')
    table.integer('EventDuration')
    table.string('EventMagnitude', 80)
    table.string('CauseId', 50)
    table.text('CauseNotes')
    table.integer('EffectPeopleDead')
    table.integer('EffectPeopleMissing')
    table.integer('EffectPeopleInjured')
    table.integer('EffectPeopleHarmed')
    table.integer('EffectPeopleAffected')
    table.integer('EffectPeopleEvacuated')
    table.integer('EffectPeopleRelocated')
    table.integer('EffectHousesDestroyed')
    table.integer('EffectHousesAffected')
    table.integer('EffectPeopleDeadQ')
    table.integer('EffectPeopleMissingQ')
    table.integer('EffectPeopleInjuredQ')
    table.integer('EffectPeopleHarmedQ')
    table.integer('EffectPeopleAffectedQ')
    table.integer('EffectPeopleEvacuatedQ')
    table.integer('EffectPeopleRelocatedQ')
    table.integer('EffectHousesDestroyedQ')
    table.integer('EffectHousesAffectedQ')
    table.decimal('EffectLossesValueLocal', 30, 2)
    table.decimal('EffectLossesValueUSD', 30, 2)
    table.decimal('EffectRoads', 30, 2)
    table.decimal('EffectFarmingAndForest', 30, 2)
    table.decimal('EffectLiveStock', 10)
    table.decimal('EffectEducationCenters', 10)
    table.decimal('EffectMedicalCenters', 10)
    table.text('EffectOtherLosses')
    table.text('EffectNotes')
    table.integer('SectorTransport')
    table.integer('SectorCommunications')
    table.integer('SectorRelief')
    table.integer('SectorAgricultural')
    table.integer('SectorWaterSupply')
    table.integer('SectorSewerage')
    table.integer('SectorEducation')
    table.integer('SectorPower')
    table.integer('SectorIndustry')
    table.integer('SectorHealth')
    table.integer('SectorOther')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'EEData', table => {
    table.string('DisasterId', 50)
    table.string('RegionId', 50)
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'EEField', table => {
    table.string('EEFieldId', 30)
    table.string('RegionId', 50)
    table.string('EEGroupId', 30)
    table.string('EEFieldLabel', 30)
    table.text('EEFieldDesc')
    table.string('EEFieldType', 20)
    table.integer('EEFieldSize')
    table.integer('EEFieldOrder')
    table.integer('EEFieldStatus')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'EEGroup', table => {
    table.string('EEGroupId', 30)
    table.string('RegionId', 50)
    table.string('EEGroupLabel', 50)
    table.text('EEGroupDesc')
    table.integer('EEGroupStatus')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'Event', table => {
    table.string('EventId', 50)
    table.string('LangIsoCode', 3)
    table.string('RegionId', 50)
    table.string('EventName', 50)
    table.text('EventDesc')
    table.integer('EventActive')
    table.integer('EventPredefined')
    table.string('EventRGBColor', 10)
    table.text('EventKeyWords')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'GeoCarto', table => {
    table.string('GeographyId', 100)
    table.integer('GeoLevelId')
    table.string('LangIsoCode', 3)
    table.string('RegionId', 50)
    table.string('GeoLevelLayerFile', 50)
    table.string('GeoLevelLayerName', 50)
    table.string('GeoLevelLayerCode', 50)
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'GeoLevel', table => {
    table.integer('GeoLevelId')
    table.string('LangIsoCode', 3)
    table.string('RegionId', 50)
    table.string('GeoLevelName', 50)
    table.text('GeoLevelDesc')
    table.integer('GeoLevelActive')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'Geography', table => {
    table.string('GeographyId', 100)
    table.string('LangIsoCode', 3)
    table.string('RegionId', 50)
    table.string('GeographyCode', 100)
    table.string('GeographyName', 200)
    table.string('GeographyFQName', 250)
    table.integer('GeographyLevel')
    table.integer('GeographyActive')
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'Info', table => {
    table.string('InfoKey', 50)
    table.string('LangIsoCode', 3)
    table.string('InfoValue', 1024)
    table.string('InfoAuxValue', 1024)
    table.datetime('RecordCreation')
    table.datetime('RecordSync')
    table.datetime('RecordUpdate')
  })

  await db.createTable(knex, 'Sync', table => {
    table.string('SyncId', 50)
    table.string('RegionId', 50)
    table.string('SyncTable', 100)
    table.datetime('SyncUpload')
    table.datetime('SyncDownload')
    table.string('SyncURL', 1024)
    table.string('SyncSpec', 1024)
  })
}

exports.down = async function(knex) {
  await db.dropTable(knex, 'Cause')
  await db.dropTable(knex, 'DatabaseLog')
  await db.dropTable(knex, 'Disaster')
  await db.dropTable(knex, 'EEData')
  await db.dropTable(knex, 'EEField')
  await db.dropTable(knex, 'EEGroup')
  await db.dropTable(knex, 'Event')
  await db.dropTable(knex, 'GeoCarto')
  await db.dropTable(knex, 'GeoLevel')
  await db.dropTable(knex, 'Geography')
  await db.dropTable(knex, 'Info')
  await db.dropTable(knex, 'Sync')
}
